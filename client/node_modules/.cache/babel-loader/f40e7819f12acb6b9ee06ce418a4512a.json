{"ast":null,"code":"var _jsxFileName = \"/home/andrew/webprogbase2/client/src/NewVideo.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport './css/new.css';\n\nclass NewVideo extends React.Component {\n  constructor(props) {\n    super(props);\n    this.count = 0;\n    this.url = '';\n    this.format = '';\n    this.state = {\n      cloudName: 'hlrzutjus',\n      unsignedUploadPreset: 'lzhs5xdj',\n      progress: 0,\n      progressText: '',\n      error: false,\n      message: ''\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.video = React.createRef();\n    this.poster = React.createRef();\n    this.title = React.createRef();\n    this.quality = React.createRef();\n    this.size = React.createRef();\n  }\n\n  uploadFile(file) {\n    this.count++;\n    let url = `https://api.cloudinary.com/v1_1/${this.state.cloudName}/upload`;\n    let fd = new FormData();\n    fd.append('file', file);\n    fd.append('upload_preset', this.state.unsignedUploadPreset);\n\n    if (this.count === 1) {\n      fd.append('folder', 'videos');\n    } else {\n      fd.append('folder', 'posters');\n    }\n\n    axios.post(url, fd, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      },\n      onUploadProgress: e => {\n        let progress = Math.round(e.loaded * 100.0 / e.total);\n\n        if (this.count === 1) {\n          this.setState({\n            progress: progress,\n            progressText: progress + \"% video\"\n          });\n        } else {\n          this.setState({\n            progress: progress,\n            progressText: progress + \"% poster\"\n          });\n        }\n      }\n    }).then(res => {\n      if (this.count === 1) {\n        console.log(res.data);\n        this.url = res.data.secure_url;\n        this.format = res.data.format;\n        this.uploadFile(this.poster.current.files[0]);\n        return false;\n      } else {\n        let obj = {\n          title: this.title.current.value\n        };\n        obj.posterUrl = res.data.secure_url;\n        obj.format = this.format;\n        obj.size = this.size.current.value;\n        obj.quality = this.quality.current.value;\n        obj.videoUrl = this.url;\n        obj.ch = this.props.location.query.ch;\n        return axios.post('/api/v1/videos', obj, {\n          headers: {\n            Authorization: `Bearer ${this.props.auth}`\n          }\n        });\n      }\n    }).then(res => {\n      if (res) {\n        this.props.history.push('/videos/' + res.data._id);\n      }\n    }).catch(console.error);\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n\n    if (this.title.current.value === '' || this.size.current.value === '' || this.quality.current.value === '' || !this.video.current.files[0] || !this.poster.current.files[0]) {\n      this.setState({\n        error: true,\n        message: 'Please fill all fields'\n      });\n    } else if (this.title.current.value.length > 50) {\n      this.setState({\n        error: true,\n        message: 'Too long title'\n      });\n    } else if (!this.video.current.files[0].type.startsWith(\"video/\") || !this.poster.current.files[0].type.startsWith(\"image/\")) {\n      this.setState({\n        error: true,\n        message: 'Wrong file type'\n      });\n    } else {\n      this.uploadFile(this.video.current.files[0]);\n    }\n  }\n\n  componentWillUnmount() {\n    this.count = 0;\n    this.url = '';\n    this.format = '';\n  }\n\n  render() {\n    if (!this.props.auth) this.props.history.push('/401');\n    const progress = this.state.progress !== 0;\n    return React.createElement(\"div\", {\n      className: \"New\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, this.state.error && React.createElement(\"div\", {\n      className: \"alert alert-danger\",\n      id: \"alert\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, this.state.message), React.createElement(\"form\", {\n      action: \"/videos/new\",\n      method: \"POST\",\n      encType: \"multipart/form-data\",\n      id: \"form\",\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"line\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-25\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, \"Title:\")), React.createElement(\"div\", {\n      className: \"col-75\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      id: \"title\",\n      name: \"title\",\n      placeholder: \"Title..\",\n      ref: this.title,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"line\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-25\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"quality\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, \"Quality:\")), React.createElement(\"div\", {\n      className: \"col-75\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"number\",\n      name: \"quality\",\n      min: \"0\",\n      ref: this.quality,\n      id: \"quality\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"line\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-25\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"size\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, \"Size:\")), React.createElement(\"div\", {\n      className: \"col-75\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"number\",\n      name: \"size\",\n      min: \"0\",\n      ref: this.size,\n      id: \"size\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }))), progress && React.createElement(\"div\", {\n      className: \"progress\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"progress\",\n      className: \"progress-bar progress-bar-success progress-bar-striped\",\n      role: \"progressbar\",\n      \"aria-valuenow\": this.state.progress,\n      \"aria-valuemin\": \"0\",\n      \"aria-valuemax\": \"100\",\n      style: {\n        width: this.state.progress + '%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, this.state.progressText)), React.createElement(\"div\", {\n      className: \"line\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-50\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group files\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, \"Upload your video \"), React.createElement(\"input\", {\n      type: \"file\",\n      className: \"form-control\",\n      name: \"video\",\n      id: \"video\",\n      accept: \"video/*\",\n      ref: this.video,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    })))), React.createElement(\"div\", {\n      className: \"col-50\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group files\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, \"Upload your poster \"), React.createElement(\"input\", {\n      type: \"file\",\n      className: \"form-control\",\n      name: \"poster\",\n      id: \"poster\",\n      accept: \"image/*\",\n      ref: this.poster,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }))))), React.createElement(\"div\", {\n      className: \"line\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Submit\",\n      id: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default NewVideo;","map":{"version":3,"sources":["/home/andrew/webprogbase2/client/src/NewVideo.js"],"names":["React","axios","NewVideo","Component","constructor","props","count","url","format","state","cloudName","unsignedUploadPreset","progress","progressText","error","message","handleSubmit","bind","video","createRef","poster","title","quality","size","uploadFile","file","fd","FormData","append","post","headers","onUploadProgress","e","Math","round","loaded","total","setState","then","res","console","log","data","secure_url","current","files","obj","value","posterUrl","videoUrl","ch","location","query","Authorization","auth","history","push","_id","catch","event","preventDefault","length","type","startsWith","componentWillUnmount","render","width"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,eAAP;;AAEA,MAAMC,QAAN,SAAuBF,KAAK,CAACG,SAA7B,CAAuC;AAIrCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AADiB,SAHjBC,KAGiB,GAHT,CAGS;AAAA,SAFjBC,GAEiB,GAFX,EAEW;AAAA,SADjBC,MACiB,GADR,EACQ;AAEjB,SAAKC,KAAL,GAAa;AACTC,MAAAA,SAAS,EAAC,WADD;AAETC,MAAAA,oBAAoB,EAAC,UAFZ;AAGTC,MAAAA,QAAQ,EAAC,CAHA;AAITC,MAAAA,YAAY,EAAC,EAJJ;AAKTC,MAAAA,KAAK,EAAE,KALE;AAMTC,MAAAA,OAAO,EAAC;AANC,KAAb;AAQA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKC,KAAL,GAAalB,KAAK,CAACmB,SAAN,EAAb;AACA,SAAKC,MAAL,GAAcpB,KAAK,CAACmB,SAAN,EAAd;AACA,SAAKE,KAAL,GAAarB,KAAK,CAACmB,SAAN,EAAb;AACA,SAAKG,OAAL,GAAetB,KAAK,CAACmB,SAAN,EAAf;AACA,SAAKI,IAAL,GAAYvB,KAAK,CAACmB,SAAN,EAAZ;AACD;;AAEDK,EAAAA,UAAU,CAACC,IAAD,EAAO;AACX,SAAKnB,KAAL;AACA,QAAIC,GAAG,GAAI,mCAAkC,KAAKE,KAAL,CAAWC,SAAU,SAAlE;AACA,QAAIgB,EAAE,GAAG,IAAIC,QAAJ,EAAT;AACAD,IAAAA,EAAE,CAACE,MAAH,CAAU,MAAV,EAAkBH,IAAlB;AACAC,IAAAA,EAAE,CAACE,MAAH,CAAU,eAAV,EAA2B,KAAKnB,KAAL,CAAWE,oBAAtC;;AACA,QAAG,KAAKL,KAAL,KAAe,CAAlB,EAAqB;AACjBoB,MAAAA,EAAE,CAACE,MAAH,CAAU,QAAV,EAAoB,QAApB;AACH,KAFD,MAGK;AACDF,MAAAA,EAAE,CAACE,MAAH,CAAU,QAAV,EAAoB,SAApB;AACH;;AACD3B,IAAAA,KAAK,CAAC4B,IAAN,CAAWtB,GAAX,EAAgBmB,EAAhB,EAAoB;AAACI,MAAAA,OAAO,EAAE;AAC1B,wBAAgB;AADU,OAAV;AAGpBC,MAAAA,gBAAgB,EAAGC,CAAD,IAAO;AACrB,YAAIpB,QAAQ,GAAGqB,IAAI,CAACC,KAAL,CAAYF,CAAC,CAACG,MAAF,GAAW,KAAZ,GAAqBH,CAAC,CAACI,KAAlC,CAAf;;AACA,YAAG,KAAK9B,KAAL,KAAe,CAAlB,EAAqB;AACjB,eAAK+B,QAAL,CAAc;AAACzB,YAAAA,QAAQ,EAAEA,QAAX;AAAqBC,YAAAA,YAAY,EAAED,QAAQ,GAAG;AAA9C,WAAd;AACH,SAFD,MAGK;AACD,eAAKyB,QAAL,CAAc;AAACzB,YAAAA,QAAQ,EAAEA,QAAX;AAAqBC,YAAAA,YAAY,EAAED,QAAQ,GAAG;AAA9C,WAAd;AACH;AACJ;AAXmB,KAApB,EAYC0B,IAZD,CAYMC,GAAG,IAAI;AACT,UAAG,KAAKjC,KAAL,KAAe,CAAlB,EAAqB;AACjBkC,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,IAAhB;AACA,aAAKnC,GAAL,GAAWgC,GAAG,CAACG,IAAJ,CAASC,UAApB;AACA,aAAKnC,MAAL,GAAc+B,GAAG,CAACG,IAAJ,CAASlC,MAAvB;AACA,aAAKgB,UAAL,CAAgB,KAAKJ,MAAL,CAAYwB,OAAZ,CAAoBC,KAApB,CAA0B,CAA1B,CAAhB;AACA,eAAO,KAAP;AACH,OAND,MAOK;AACD,YAAIC,GAAG,GAAG;AAACzB,UAAAA,KAAK,EAAE,KAAKA,KAAL,CAAWuB,OAAX,CAAmBG;AAA3B,SAAV;AACAD,QAAAA,GAAG,CAACE,SAAJ,GAAgBT,GAAG,CAACG,IAAJ,CAASC,UAAzB;AACAG,QAAAA,GAAG,CAACtC,MAAJ,GAAa,KAAKA,MAAlB;AACAsC,QAAAA,GAAG,CAACvB,IAAJ,GAAW,KAAKA,IAAL,CAAUqB,OAAV,CAAkBG,KAA7B;AACAD,QAAAA,GAAG,CAACxB,OAAJ,GAAc,KAAKA,OAAL,CAAasB,OAAb,CAAqBG,KAAnC;AACAD,QAAAA,GAAG,CAACG,QAAJ,GAAe,KAAK1C,GAApB;AACAuC,QAAAA,GAAG,CAACI,EAAJ,GAAS,KAAK7C,KAAL,CAAW8C,QAAX,CAAoBC,KAApB,CAA0BF,EAAnC;AACA,eAAOjD,KAAK,CAAC4B,IAAN,CAAW,gBAAX,EAA6BiB,GAA7B,EAAkC;AAAChB,UAAAA,OAAO,EAAC;AAACuB,YAAAA,aAAa,EAAG,UAAS,KAAKhD,KAAL,CAAWiD,IAAK;AAA1C;AAAT,SAAlC,CAAP;AACH;AACJ,KA9BD,EA+BChB,IA/BD,CA+BMC,GAAG,IAAI;AACT,UAAGA,GAAH,EAAQ;AACJ,aAAKlC,KAAL,CAAWkD,OAAX,CAAmBC,IAAnB,CAAwB,aAAajB,GAAG,CAACG,IAAJ,CAASe,GAA9C;AACH;AACJ,KAnCD,EAoCCC,KApCD,CAoCOlB,OAAO,CAAC1B,KApCf;AAqCH;;AAEHE,EAAAA,YAAY,CAAC2C,KAAD,EAAQ;AAClBA,IAAAA,KAAK,CAACC,cAAN;;AACA,QAAI,KAAKvC,KAAL,CAAWuB,OAAX,CAAmBG,KAAnB,KAA6B,EAA7B,IAAmC,KAAKxB,IAAL,CAAUqB,OAAV,CAAkBG,KAAlB,KAA4B,EAA/D,IAAqE,KAAKzB,OAAL,CAAasB,OAAb,CAAqBG,KAArB,KAA+B,EAApG,IAA0G,CAAC,KAAK7B,KAAL,CAAW0B,OAAX,CAAmBC,KAAnB,CAAyB,CAAzB,CAA3G,IAA0I,CAAC,KAAKzB,MAAL,CAAYwB,OAAZ,CAAoBC,KAApB,CAA0B,CAA1B,CAA/I,EAA6K;AACzK,WAAKR,QAAL,CAAc;AAACvB,QAAAA,KAAK,EAAE,IAAR;AAAcC,QAAAA,OAAO,EAAC;AAAtB,OAAd;AACH,KAFD,MAGK,IAAG,KAAKM,KAAL,CAAWuB,OAAX,CAAmBG,KAAnB,CAAyBc,MAAzB,GAAkC,EAArC,EAAyC;AAC1C,WAAKxB,QAAL,CAAc;AAACvB,QAAAA,KAAK,EAAE,IAAR;AAAcC,QAAAA,OAAO,EAAC;AAAtB,OAAd;AACH,KAFI,MAGA,IAAG,CAAC,KAAKG,KAAL,CAAW0B,OAAX,CAAmBC,KAAnB,CAAyB,CAAzB,EAA4BiB,IAA5B,CAAiCC,UAAjC,CAA4C,QAA5C,CAAD,IAA0D,CAAC,KAAK3C,MAAL,CAAYwB,OAAZ,CAAoBC,KAApB,CAA0B,CAA1B,EAA6BiB,IAA7B,CAAkCC,UAAlC,CAA6C,QAA7C,CAA9D,EAAsH;AACvH,WAAK1B,QAAL,CAAc;AAACvB,QAAAA,KAAK,EAAE,IAAR;AAAcC,QAAAA,OAAO,EAAC;AAAtB,OAAd;AACH,KAFI,MAGA;AACD,WAAKS,UAAL,CAAgB,KAAKN,KAAL,CAAW0B,OAAX,CAAmBC,KAAnB,CAAyB,CAAzB,CAAhB;AACH;AACF;;AAEDmB,EAAAA,oBAAoB,GAAG;AACnB,SAAK1D,KAAL,GAAa,CAAb;AACA,SAAKC,GAAL,GAAW,EAAX;AACA,SAAKC,MAAL,GAAc,EAAd;AACH;;AAEDyD,EAAAA,MAAM,GAAG;AACP,QAAG,CAAC,KAAK5D,KAAL,CAAWiD,IAAf,EAAqB,KAAKjD,KAAL,CAAWkD,OAAX,CAAmBC,IAAnB,CAAwB,MAAxB;AACnB,UAAM5C,QAAQ,GAAG,KAAKH,KAAL,CAAWG,QAAX,KAAwB,CAAzC;AACF,WACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKH,KAAL,CAAWK,KAAX,IACC;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAoC,MAAA,EAAE,EAAC,OAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAgD,KAAKL,KAAL,CAAWM,OAA3D,CAFN,EAIE;AAAM,MAAA,MAAM,EAAC,aAAb;AAA2B,MAAA,MAAM,EAAC,MAAlC;AAAyC,MAAA,OAAO,EAAC,qBAAjD;AAAuE,MAAA,EAAE,EAAC,MAA1E;AAAiF,MAAA,QAAQ,EAAE,KAAKC,YAAhG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAO,MAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,CADF,EAIE;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,EAAE,EAAC,OAAtB;AAA8B,MAAA,IAAI,EAAC,OAAnC;AAA2C,MAAA,WAAW,EAAC,SAAvD;AAAiE,MAAA,GAAG,EAAE,KAAKK,KAA3E;AAAkF,MAAA,QAAQ,MAA1F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAJF,CADF,EASE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAO,MAAA,OAAO,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,CADF,EAIE;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,IAAI,EAAC,SAA1B;AAAoC,MAAA,GAAG,EAAC,GAAxC;AAA4C,MAAA,GAAG,EAAE,KAAKC,OAAtD;AAA+D,MAAA,EAAE,EAAC,SAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAJF,CATF,EAiBE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAO,MAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,CADJ,EAII;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,IAAI,EAAC,MAA1B;AAAiC,MAAA,GAAG,EAAC,GAArC;AAAyC,MAAA,GAAG,EAAE,KAAKC,IAAnD;AAAyD,MAAA,EAAE,EAAC,MAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAJJ,CAjBF,EAyBGX,QAAQ,IACP;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,EAAE,EAAC,UAAR;AAAmB,MAAA,SAAS,EAAC,wDAA7B;AAAsF,MAAA,IAAI,EAAC,aAA3F;AAAyG,uBAAe,KAAKH,KAAL,CAAWG,QAAnI;AAA6I,uBAAc,GAA3J;AAA+J,uBAAc,KAA7K;AAAmL,MAAA,KAAK,EAAE;AAACsD,QAAAA,KAAK,EAAC,KAAKzD,KAAL,CAAWG,QAAX,GAAsB;AAA7B,OAA1L;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKH,KAAL,CAAWI,YADhB,CADJ,CA1BJ,EAgCE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACM;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADJ,EAEE;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,SAAS,EAAC,cAA7B;AAA4C,MAAA,IAAI,EAAC,OAAjD;AAAyD,MAAA,EAAE,EAAC,OAA5D;AAAoE,MAAA,MAAM,EAAC,SAA3E;AAAqF,MAAA,GAAG,EAAE,KAAKK,KAA/F;AAAsG,MAAA,QAAQ,MAA9G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADJ,CADN,CADF,EASE;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACU;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADJ,EAEE;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,SAAS,EAAC,cAA7B;AAA4C,MAAA,IAAI,EAAC,QAAjD;AAA0D,MAAA,EAAE,EAAC,QAA7D;AAAsE,MAAA,MAAM,EAAC,SAA7E;AAAuF,MAAA,GAAG,EAAE,KAAKE,MAAjG;AAAyG,MAAA,QAAQ,MAAjH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADJ,CADV,CATF,CAhCF,EAkDE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,KAAK,EAAC,QAA3B;AAAoC,MAAA,EAAE,EAAC,QAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAlDF,CAJF,CADF;AA6DD;;AA/JoC;;AAkKvC,eAAelB,QAAf","sourcesContent":["import React from 'react'\nimport axios from 'axios'\nimport './css/new.css'\n\nclass NewVideo extends React.Component {\n    count = 0;\n    url = '';\n    format = '';\n  constructor(props) {\n    super(props);\n    this.state = {\n        cloudName:'hlrzutjus',\n        unsignedUploadPreset:'lzhs5xdj',\n        progress:0,\n        progressText:'',\n        error: false,\n        message:''\n    }\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.video = React.createRef();\n    this.poster = React.createRef();\n    this.title = React.createRef();\n    this.quality = React.createRef();\n    this.size = React.createRef();\n  }\n\n  uploadFile(file) {\n        this.count++;\n        let url = `https://api.cloudinary.com/v1_1/${this.state.cloudName}/upload`;\n        let fd = new FormData();\n        fd.append('file', file);\n        fd.append('upload_preset', this.state.unsignedUploadPreset);\n        if(this.count === 1) {\n            fd.append('folder', 'videos');\n        }\n        else {\n            fd.append('folder', 'posters');\n        }\n        axios.post(url, fd, {headers: {\n            'Content-Type': 'multipart/form-data'\n          },\n        onUploadProgress: (e) => {\n            let progress = Math.round((e.loaded * 100.0) / e.total);\n            if(this.count === 1) {\n                this.setState({progress: progress, progressText: progress + \"% video\"});\n            }\n            else {\n                this.setState({progress: progress, progressText: progress + \"% poster\"});\n            }\n        }})\n        .then(res => {\n            if(this.count === 1) {\n                console.log(res.data);\n                this.url = res.data.secure_url;\n                this.format = res.data.format;\n                this.uploadFile(this.poster.current.files[0]);\n                return false;\n            }\n            else {\n                let obj = {title: this.title.current.value};\n                obj.posterUrl = res.data.secure_url;\n                obj.format = this.format;\n                obj.size = this.size.current.value;\n                obj.quality = this.quality.current.value;\n                obj.videoUrl = this.url;\n                obj.ch = this.props.location.query.ch;\n                return axios.post('/api/v1/videos', obj, {headers:{Authorization: `Bearer ${this.props.auth}`}})\n            }\n        })\n        .then(res => {\n            if(res) {\n                this.props.history.push('/videos/' + res.data._id);\n            }\n        })\n        .catch(console.error);    \n    }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    if (this.title.current.value === '' || this.size.current.value === '' || this.quality.current.value === '' || !this.video.current.files[0] || !this.poster.current.files[0]) {\n        this.setState({error: true, message:'Please fill all fields'});\n    }\n    else if(this.title.current.value.length > 50) {\n        this.setState({error: true, message:'Too long title'});\n    }\n    else if(!this.video.current.files[0].type.startsWith(\"video/\") || !this.poster.current.files[0].type.startsWith(\"image/\")) {\n        this.setState({error: true, message:'Wrong file type'});\n    }\n    else {\n        this.uploadFile(this.video.current.files[0]);\n    }\n  }\n\n  componentWillUnmount() {\n      this.count = 0;\n      this.url = '';\n      this.format = '';\n  }\n\n  render() {\n    if(!this.props.auth) this.props.history.push('/401');\n      const progress = this.state.progress !== 0;\n    return (\n      <div className=\"New\">\n          {this.state.error && \n            <div className=\"alert alert-danger\" id=\"alert\">{this.state.message}</div>\n          }\n        <form action=\"/videos/new\" method=\"POST\" encType=\"multipart/form-data\" id='form' onSubmit={this.handleSubmit}>\n          <div className=\"line\">\n            <div className=\"col-25\">\n              <label htmlFor=\"title\">Title:</label>\n            </div>\n            <div className=\"col-75\">\n              <input type=\"text\" id=\"title\" name=\"title\" placeholder=\"Title..\" ref={this.title} required />\n            </div>\n          </div>\n          <div className=\"line\">\n            <div className=\"col-25\">\n              <label htmlFor=\"quality\">Quality:</label>\n            </div>\n            <div className=\"col-75\">\n                <input type=\"number\" name=\"quality\" min=\"0\" ref={this.quality} id=\"quality\" />\n            </div>\n          </div>\n          <div className=\"line\">\n              <div className=\"col-25\">\n                <label htmlFor=\"size\">Size:</label>\n              </div>\n              <div className=\"col-75\">\n                  <input type=\"number\" name=\"size\" min=\"0\" ref={this.size} id=\"size\" />\n              </div>\n            </div>\n          {progress &&\n            <div className=\"progress\">\n                <div id=\"progress\" className=\"progress-bar progress-bar-success progress-bar-striped\" role=\"progressbar\" aria-valuenow={this.state.progress} aria-valuemin=\"0\" aria-valuemax=\"100\" style={{width:this.state.progress + '%'}}>\n                    {this.state.progressText}\n                </div>\n            </div>\n          }\n          <div className=\"line\">\n            <div className=\"col-50\">\n                  <div className=\"col-md-6\">\n                      <div className=\"form-group files\">\n                          <label>Upload your video </label>\n                        <input type=\"file\" className=\"form-control\" name=\"video\" id=\"video\" accept=\"video/*\" ref={this.video} required />\n                      </div>   \n                  </div>\n            </div>\n            <div className=\"col-50\">\n                      <div className=\"col-md-6\">\n                          <div className=\"form-group files\">\n                              <label>Upload your poster </label>\n                            <input type=\"file\" className=\"form-control\" name=\"poster\" id=\"poster\" accept=\"image/*\" ref={this.poster} required />\n                          </div>   \n                      </div>\n            </div>\n          </div>\n          <div className=\"line\">\n            <input type=\"submit\" value=\"Submit\" id=\"submit\" />\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default NewVideo"]},"metadata":{},"sourceType":"module"}