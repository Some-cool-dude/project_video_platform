{"ast":null,"code":"var _jsxFileName = \"/home/andrew/webprogbase2/client/src/NewChannel.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport './css/new.css';\n\nclass NewChannel extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      cloudName: 'hlrzutjus',\n      unsignedUploadPreset: 'lzhs5xdj',\n      progress: 0,\n      progressText: '',\n      error: false,\n      message: ''\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.img = React.createRef();\n    this.title = React.createRef();\n  }\n\n  uploadFile(file) {\n    let url = `https://api.cloudinary.com/v1_1/${this.state.cloudName}/upload`;\n    let fd = new FormData();\n    fd.append('file', file);\n    fd.append('upload_preset', this.state.unsignedUploadPreset);\n    fd.append('folder', 'chimg');\n    axios.post(url, fd, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      },\n      onUploadProgress: e => {\n        let progress = Math.round(e.loaded * 100.0 / e.total);\n        this.setState({\n          progress: progress,\n          progressText: progress\n        });\n      }\n    }).then(res => {\n      let obj = {\n        title: this.title.current.value\n      };\n      obj.chimgUrl = res.data.secure_url;\n      return axios.post('/api/v1/channels', obj, {\n        headers: {\n          Authorization: `Bearer ${this.props.auth}`\n        }\n      });\n    }).then(res => {\n      if (res) {\n        this.props.history.push('/channels/' + res.data._id);\n      }\n    }).catch(console.error);\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n\n    if (this.title.current.value === '') {\n      this.setState({\n        error: true,\n        message: 'Please fill all fields'\n      });\n    } else if (this.title.current.value.length > 50) {\n      this.setState({\n        error: true,\n        message: 'Too long title'\n      });\n    } else if (!this.img.current.files[0].type.startsWith(\"image/\")) {\n      this.setState({\n        error: true,\n        message: 'Wrong file type'\n      });\n    } else {\n      this.uploadFile(this.img.current.files[0]);\n    }\n  }\n\n  render() {\n    if (!this.props.auth) this.props.history.push('/401');\n    const progress = this.state.progress !== 0;\n    return React.createElement(\"div\", {\n      className: \"New\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, this.state.error && React.createElement(\"div\", {\n      className: \"alert alert-danger\",\n      id: \"alert\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, this.state.message), React.createElement(\"form\", {\n      action: \"/channels/new\",\n      method: \"POST\",\n      encType: \"multipart/form-data\",\n      id: \"form\",\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"line\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-25\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, \"Title:\")), React.createElement(\"div\", {\n      className: \"col-75\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      id: \"title\",\n      name: \"title\",\n      placeholder: \"Title..\",\n      ref: this.title,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }))), progress && React.createElement(\"div\", {\n      className: \"progress\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"progress\",\n      className: \"progress-bar progress-bar-success progress-bar-striped\",\n      role: \"progressbar\",\n      \"aria-valuenow\": this.state.progress,\n      \"aria-valuemin\": \"0\",\n      \"aria-valuemax\": \"100\",\n      style: {\n        width: this.state.progress + '%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, this.state.progressText)), React.createElement(\"div\", {\n      className: \"line\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-25\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"img\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, \"Channel image:\")), React.createElement(\"div\", {\n      className: \"col-75\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group files\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"file\",\n      className: \"form-control\",\n      name: \"chimg\",\n      id: \"img\",\n      ref: this.img,\n      accept: \"image/*\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }))))), React.createElement(\"div\", {\n      className: \"line\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Submit\",\n      id: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default NewChannel;","map":{"version":3,"sources":["/home/andrew/webprogbase2/client/src/NewChannel.js"],"names":["React","axios","NewChannel","Component","constructor","props","state","cloudName","unsignedUploadPreset","progress","progressText","error","message","handleSubmit","bind","img","createRef","title","uploadFile","file","url","fd","FormData","append","post","headers","onUploadProgress","e","Math","round","loaded","total","setState","then","res","obj","current","value","chimgUrl","data","secure_url","Authorization","auth","history","push","_id","catch","console","event","preventDefault","length","files","type","startsWith","render","width"],"mappings":"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","sourcesContent":["import React from 'react'\nimport axios from 'axios'\nimport './css/new.css'\n\nclass NewChannel extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n        cloudName:'hlrzutjus',\n        unsignedUploadPreset:'lzhs5xdj',\n        progress:0,\n        progressText:'',\n        error: false,\n        message:''\n    }\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.img = React.createRef();\n    this.title = React.createRef();\n  }\n\n  uploadFile(file) {\n        let url = `https://api.cloudinary.com/v1_1/${this.state.cloudName}/upload`;\n        let fd = new FormData();\n        fd.append('file', file);\n        fd.append('upload_preset', this.state.unsignedUploadPreset);\n        fd.append('folder', 'chimg');\n        axios.post(url, fd, {headers: {\n            'Content-Type': 'multipart/form-data'\n          },\n        onUploadProgress: (e) => {\n            let progress = Math.round((e.loaded * 100.0) / e.total);\n            this.setState({progress: progress, progressText: progress});\n        }})\n        .then(res => {\n            let obj = {title: this.title.current.value};\n            obj.chimgUrl = res.data.secure_url;\n            return axios.post('/api/v1/channels', obj, {headers:{Authorization: `Bearer ${this.props.auth}`}})\n        })\n        .then(res => {\n            if(res) {\n                this.props.history.push('/channels/' + res.data._id);\n            }\n        })\n        .catch(console.error);    \n    }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    if (this.title.current.value === '') {\n        this.setState({error: true, message:'Please fill all fields'});\n    }\n    else if(this.title.current.value.length > 50) {\n        this.setState({error: true, message:'Too long title'});\n    }\n    else if(!this.img.current.files[0].type.startsWith(\"image/\")) {\n        this.setState({error: true, message:'Wrong file type'});\n    }\n    else {\n        this.uploadFile(this.img.current.files[0]);\n    }\n  }\n\n  render() {\n    if(!this.props.auth) this.props.history.push('/401');\n      const progress = this.state.progress !== 0;\n    return (\n      <div className=\"New\">\n          {this.state.error && \n            <div className=\"alert alert-danger\" id=\"alert\">{this.state.message}</div>\n          }\n        <form action=\"/channels/new\" method=\"POST\" encType=\"multipart/form-data\" id='form' onSubmit={this.handleSubmit}>\n          <div className=\"line\">\n            <div className=\"col-25\">\n              <label htmlFor=\"title\">Title:</label>\n            </div>\n            <div className=\"col-75\">\n              <input type=\"text\" id=\"title\" name=\"title\" placeholder=\"Title..\" ref={this.title} required />\n            </div>\n          </div>\n          {progress &&\n            <div className=\"progress\">\n                <div id=\"progress\" className=\"progress-bar progress-bar-success progress-bar-striped\" role=\"progressbar\" aria-valuenow={this.state.progress} aria-valuemin=\"0\" aria-valuemax=\"100\" style={{width:this.state.progress + '%'}}>\n                    {this.state.progressText}\n                </div>\n            </div>\n          }\n          <div className=\"line\">\n            <div className=\"col-25\">\n              <label htmlFor=\"img\">Channel image:</label>\n            </div>\n            <div className=\"col-75\">\n                <div className=\"col-md-6\">\n                    <div className=\"form-group files\">\n                      <input type=\"file\" className=\"form-control\" name=\"chimg\" id=\"img\" ref={this.img} accept=\"image/*\" required/>\n                    </div>   \n                </div>\n            </div>\n          </div>\n          <div className=\"line\">\n            <input type=\"submit\" value=\"Submit\" id=\"submit\" />\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default NewChannel"]},"metadata":{},"sourceType":"module"}