{"ast":null,"code":"import _classCallCheck from\"/home/andrew/webprogbase2/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/andrew/webprogbase2/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/home/andrew/webprogbase2/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/home/andrew/webprogbase2/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/home/andrew/webprogbase2/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import React from'react';import'./css/about.css';var API=/*#__PURE__*/function(_React$Component){_inherits(API,_React$Component);function API(){_classCallCheck(this,API);return _possibleConstructorReturn(this,_getPrototypeOf(API).apply(this,arguments));}_createClass(API,[{key:\"render\",value:function render(){return React.createElement(\"div\",{className:\"API\"},React.createElement(\"h1\",null,\"API\"),React.createElement(\"ul\",null,React.createElement(\"li\",null,React.createElement(\"a\",{href:\"#users\"},\"User\")),React.createElement(\"li\",null,React.createElement(\"a\",{href:\"#videos\"},\"Videos\")),React.createElement(\"li\",null,React.createElement(\"a\",{href:\"#channels\"},\"Channels\")),React.createElement(\"li\",null,React.createElement(\"a\",{href:\"#account\"},\"Account\")),React.createElement(\"li\",null,React.createElement(\"a\",{href:\"#errors\"},\"Errors\"))),React.createElement(\"h1\",{id:\"users\"},\"Users\"),React.createElement(\"h2\",{id:\"warning\"},\"Warning: you must have admin role\"),React.createElement(\"h2\",null,\"Get users\"),React.createElement(\"p\",null,\"Method: GET\"),React.createElement(\"p\",null,\"Url: /api/v1/users\"),React.createElement(\"p\",null,\"Params:\"),React.createElement(\"table\",null,React.createElement(\"tr\",null,React.createElement(\"td\",null,\"page (not required)\"),React.createElement(\"td\",null,\"Get users by page\")),React.createElement(\"tr\",null,React.createElement(\"td\",null,\"search (not required)\"),React.createElement(\"td\",null,\"Get users by title or part of title\"))),React.createElement(\"p\",null,\"Return: users(with pagination)\"),React.createElement(\"h2\",null,\"Add user\"),React.createElement(\"p\",null,\"Method: POST\"),React.createElement(\"p\",null,\"Url: /api/v1/users\"),React.createElement(\"p\",null,\"Params:\"),React.createElement(\"table\",null,React.createElement(\"tr\",null,React.createElement(\"td\",null,\"username\"),React.createElement(\"td\",null,\"Unique string\")),React.createElement(\"tr\",null,React.createElement(\"td\",null,\"password\"),React.createElement(\"td\",null,\"Very hard string\")),React.createElement(\"tr\",null,React.createElement(\"td\",null,\"fullname\"),React.createElement(\"td\",null,\"Some string\"))),React.createElement(\"p\",null,\"Return: created user\"),React.createElement(\"h2\",null,\"Get one user by his id\"),React.createElement(\"p\",null,\"Method: GET\"),React.createElement(\"p\",null,\"Url: /api/v1/users/:id\"),React.createElement(\"p\",null,\"Params: No params\"),React.createElement(\"p\",null,\"Return: user\"),React.createElement(\"h2\",null,\"Update one user by his id\"),React.createElement(\"p\",null,\"Method: PUT\"),React.createElement(\"p\",null,\"Url: /api/v1/users/:id\"),React.createElement(\"p\",null,\"Params:\"),React.createElement(\"table\",null,React.createElement(\"tr\",null,React.createElement(\"td\",null,\"role\"),React.createElement(\"td\",null,\"0(User) or 1(Admin)\")),React.createElement(\"tr\",null,React.createElement(\"td\",null,\"fullname\"),React.createElement(\"td\",null,\"Some string\"))),React.createElement(\"p\",null,\"Return: No content\"),React.createElement(\"h2\",null,\"Delete one user by his id\"),React.createElement(\"p\",null,\"Method: DELETE\"),React.createElement(\"p\",null,\"Url: /api/v1/users/:id\"),React.createElement(\"p\",null,\"Params: No params\"),React.createElement(\"p\",null,\"Return: No content\"),React.createElement(\"h1\",{id:\"videos\"},\"Videos\"),React.createElement(\"h2\",null,\"Get videos\"),React.createElement(\"p\",null,\"Method: GET\"),React.createElement(\"p\",null,\"Url: /api/v1/videos\"),React.createElement(\"p\",null,\"Params:\"),React.createElement(\"table\",null,React.createElement(\"tr\",null,React.createElement(\"td\",null,\"page (not required)\"),React.createElement(\"td\",null,\"Get videos by page\")),React.createElement(\"tr\",null,React.createElement(\"td\",null,\"search (not required)\"),React.createElement(\"td\",null,\"Get videos by title or part of title\"))),React.createElement(\"p\",null,\"Return: videos(with pagination)\"),React.createElement(\"h2\",null,\"Add video\"),React.createElement(\"p\",null,\"Method: POST\"),React.createElement(\"p\",null,\"Url: /api/v1/videos\"),React.createElement(\"p\",null,\"Params:\"),React.createElement(\"table\",null,React.createElement(\"tr\",null,React.createElement(\"td\",null,\"size\"),React.createElement(\"td\",null,\"positive number\")),React.createElement(\"tr\",null,React.createElement(\"td\",null,\"quality\"),React.createElement(\"td\",null,\"positive number\")),React.createElement(\"tr\",null,React.createElement(\"td\",null,\"title\"),React.createElement(\"td\",null,\"Some string\")),React.createElement(\"tr\",null,React.createElement(\"td\",null,\"videoUrl\"),React.createElement(\"td\",null,\"url to some video\")),React.createElement(\"tr\",null,React.createElement(\"td\",null,\"posterUrl\"),React.createElement(\"td\",null,\"url to some poster\")),React.createElement(\"tr\",null,React.createElement(\"td\",null,\"ch (not required)\"),React.createElement(\"td\",null,\"channel id which will have this video\"))),React.createElement(\"p\",null,\"Return: created video\"),React.createElement(\"h2\",null,\"Get one video by his id\"),React.createElement(\"p\",null,\"Method: GET\"),React.createElement(\"p\",null,\"Url: /api/v1/videos/:id\"),React.createElement(\"p\",null,\"Params: No params\"),React.createElement(\"h2\",null,\"Update one video by his id\"),React.createElement(\"p\",null,\"Method: PUT\"),React.createElement(\"p\",null,\"Url: /api/v1/videos/:id\"),React.createElement(\"p\",null,\"Params:\"),React.createElement(\"table\",null,React.createElement(\"tr\",null,React.createElement(\"td\",null,\"size\"),React.createElement(\"td\",null,\"positive number\")),React.createElement(\"tr\",null,React.createElement(\"td\",null,\"quality\"),React.createElement(\"td\",null,\"positive number\")),React.createElement(\"tr\",null,React.createElement(\"td\",null,\"title\"),React.createElement(\"td\",null,\"Some string\"))),React.createElement(\"p\",null,\"Return: No content\"),React.createElement(\"h2\",null,\"Delete one video by his id\"),React.createElement(\"p\",null,\"Method: DELETE\"),React.createElement(\"p\",null,\"Url: /api/v1/videos/:id\"),React.createElement(\"p\",null,\"Params: No params\"),React.createElement(\"p\",null,\"Return: No content\"),React.createElement(\"h1\",{id:\"channels\"},\"Channels\"),React.createElement(\"h2\",null,\"Get channels\"),React.createElement(\"p\",null,\"Method: GET\"),React.createElement(\"p\",null,\"Url: /api/v1/channels\"),React.createElement(\"p\",null,\"Params:\"),React.createElement(\"table\",null,React.createElement(\"tr\",null,React.createElement(\"td\",null,\"page (not required)\"),React.createElement(\"td\",null,\"Get channels by page\")),React.createElement(\"tr\",null,React.createElement(\"td\",null,\"search (not required)\"),React.createElement(\"td\",null,\"Get channels by title or part of title\"))),React.createElement(\"p\",null,\"Return: channels(with pagination)\"),React.createElement(\"h2\",null,\"Add channel\"),React.createElement(\"p\",null,\"Method: POST\"),React.createElement(\"p\",null,\"Url: /api/v1/channel\"),React.createElement(\"p\",null,\"Params:\"),React.createElement(\"table\",null,React.createElement(\"tr\",null,React.createElement(\"td\",null,\"title\"),React.createElement(\"td\",null,\"Some string\")),React.createElement(\"tr\",null,React.createElement(\"td\",null,\"chimgUrl\"),React.createElement(\"td\",null,\"url to some image\"))),React.createElement(\"p\",null,\"Return: created channel\"),React.createElement(\"h2\",null,\"Get one channel by his id\"),React.createElement(\"p\",null,\"Method: GET\"),React.createElement(\"p\",null,\"Url: /api/v1/channels/:id\"),React.createElement(\"p\",null,\"Params: No params\"),React.createElement(\"h2\",null,\"Update one channel by his id\"),React.createElement(\"p\",null,\"Method: PUT\"),React.createElement(\"p\",null,\"Url: /api/v1/channels/:id\"),React.createElement(\"p\",null,\"Params:\"),React.createElement(\"table\",null,React.createElement(\"tr\",null,React.createElement(\"td\",null,\"title\"),React.createElement(\"td\",null,\"Some string\"))),React.createElement(\"p\",null,\"Return: No content\"),React.createElement(\"h2\",null,\"Delete one channel by his id\"),React.createElement(\"p\",null,\"Method: DELETE\"),React.createElement(\"p\",null,\"Url: /api/v1/channels/:id\"),React.createElement(\"p\",null,\"Params: No params\"),React.createElement(\"p\",null,\"Return: No content\"),React.createElement(\"h1\",{id:\"account\"},\"Account\"),React.createElement(\"h2\",null,\"Get user data\"),React.createElement(\"p\",null,\"Method: GET\"),React.createElement(\"p\",null,\"Url: /developer/v1/\"),React.createElement(\"p\",null,\"Params: No params\"),React.createElement(\"p\",null,\"Return: user that login\"),React.createElement(\"p\",null,\"Method of authorization: header must have field Authorization: Basic value(username:password in Base64)\"),React.createElement(\"h1\",{id:\"errors\"},\"Errors\"),React.createElement(\"p\",null,\"400(username is already exist, page less then 0 or greater then pages\"),React.createElement(\"p\",null,\"401(You are not authorize)\"),React.createElement(\"p\",null,\"403(You are not admin)\"),React.createElement(\"p\",null,\"404(Not found)\"),React.createElement(\"p\",null,\"500(DataBase error)\"));}}]);return API;}(React.Component);export default API;","map":{"version":3,"sources":["/home/andrew/webprogbase2/client/src/API.js"],"names":["React","API","Component"],"mappings":"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","sourcesContent":["import React from 'react'\nimport './css/about.css'\n\nclass API extends React.Component {\n  render() {\n    return (\n      <div className=\"API\">\n        <h1>API</h1>\n    <ul>\n        <li><a href=\"#users\">User</a></li>\n        <li><a href=\"#videos\">Videos</a></li>\n        <li><a href=\"#channels\">Channels</a></li>\n        <li><a href=\"#account\">Account</a></li>\n        <li><a href=\"#errors\">Errors</a></li>\n    </ul>\n    <h1 id=\"users\">Users</h1>\n    <h2 id=\"warning\">Warning: you must have admin role</h2>\n    <h2>Get users</h2>\n    <p>Method: GET</p>\n    <p>Url: /api/v1/users</p>\n    <p>Params:</p>\n    <table>\n        <tr>\n            <td>page (not required)</td>\n            <td>Get users by page</td>\n        </tr>\n        <tr>\n            <td>search (not required)</td>\n            <td>Get users by title or part of title</td>\n        </tr>\n    </table>\n    <p>Return: users(with pagination)</p>\n    <h2>Add user</h2>\n    <p>Method: POST</p>\n    <p>Url: /api/v1/users</p>\n    <p>Params:</p>\n    <table>\n        <tr>\n            <td>username</td>\n            <td>Unique string</td>\n        </tr>\n        <tr>\n            <td>password</td>\n            <td>Very hard string</td>\n        </tr>\n        <tr>\n            <td>fullname</td>\n            <td>Some string</td>\n        </tr>\n    </table>\n    <p>Return: created user</p>\n    <h2>Get one user by his id</h2>\n    <p>Method: GET</p>\n    <p>Url: /api/v1/users/:id</p>\n    <p>Params: No params</p>\n    <p>Return: user</p>\n    <h2>Update one user by his id</h2>\n    <p>Method: PUT</p>\n    <p>Url: /api/v1/users/:id</p>\n    <p>Params:</p>\n    <table>\n        <tr>\n            <td>role</td>\n            <td>0(User) or 1(Admin)</td>\n        </tr>\n        <tr>\n            <td>fullname</td>\n            <td>Some string</td>\n        </tr>\n    </table>\n    <p>Return: No content</p>\n    <h2>Delete one user by his id</h2>\n    <p>Method: DELETE</p>\n    <p>Url: /api/v1/users/:id</p>\n    <p>Params: No params</p>\n    <p>Return: No content</p>\n    <h1 id=\"videos\">Videos</h1>\n    <h2>Get videos</h2>\n    <p>Method: GET</p>\n    <p>Url: /api/v1/videos</p>\n    <p>Params:</p>\n    <table>\n        <tr>\n            <td>page (not required)</td>\n            <td>Get videos by page</td>\n        </tr>\n        <tr>\n            <td>search (not required)</td>\n            <td>Get videos by title or part of title</td>\n        </tr>\n    </table>\n    <p>Return: videos(with pagination)</p>\n    <h2>Add video</h2>\n    <p>Method: POST</p>\n    <p>Url: /api/v1/videos</p>\n    <p>Params:</p>\n    <table>\n        <tr>\n            <td>size</td>\n            <td>positive number</td>\n        </tr>\n        <tr>\n            <td>quality</td>\n            <td>positive number</td>\n        </tr>\n        <tr>\n            <td>title</td>\n            <td>Some string</td>\n        </tr>\n        <tr>\n            <td>videoUrl</td>\n            <td>url to some video</td>\n        </tr>\n        <tr>\n            <td>posterUrl</td>\n            <td>url to some poster</td>\n        </tr>\n        <tr>\n            <td>ch (not required)</td>\n            <td>channel id which will have this video</td>\n        </tr>\n    </table>\n    <p>Return: created video</p>\n    <h2>Get one video by his id</h2>\n    <p>Method: GET</p>\n    <p>Url: /api/v1/videos/:id</p>\n    <p>Params: No params</p>\n    <h2>Update one video by his id</h2>\n    <p>Method: PUT</p>\n    <p>Url: /api/v1/videos/:id</p>\n    <p>Params:</p>\n    <table>\n            <tr>\n                <td>size</td>\n                <td>positive number</td>\n            </tr>\n            <tr>\n                <td>quality</td>\n                <td>positive number</td>\n            </tr>\n            <tr>\n                <td>title</td>\n                <td>Some string</td>\n            </tr>\n    </table>\n    <p>Return: No content</p>\n    <h2>Delete one video by his id</h2>\n    <p>Method: DELETE</p>\n    <p>Url: /api/v1/videos/:id</p>\n    <p>Params: No params</p>\n    <p>Return: No content</p>\n    <h1 id=\"channels\">Channels</h1>\n    <h2>Get channels</h2>\n    <p>Method: GET</p>\n    <p>Url: /api/v1/channels</p>\n    <p>Params:</p>\n    <table>\n        <tr>\n            <td>page (not required)</td>\n            <td>Get channels by page</td>\n        </tr>\n        <tr>\n            <td>search (not required)</td>\n            <td>Get channels by title or part of title</td>\n        </tr>\n    </table>\n    <p>Return: channels(with pagination)</p>\n    <h2>Add channel</h2>\n    <p>Method: POST</p>\n    <p>Url: /api/v1/channel</p>\n    <p>Params:</p>\n    <table>\n        <tr>\n            <td>title</td>\n            <td>Some string</td>\n        </tr>\n        <tr>\n            <td>chimgUrl</td>\n            <td>url to some image</td>\n        </tr>\n    </table>\n    <p>Return: created channel</p>\n    <h2>Get one channel by his id</h2>\n    <p>Method: GET</p>\n    <p>Url: /api/v1/channels/:id</p>\n    <p>Params: No params</p>\n    <h2>Update one channel by his id</h2>\n    <p>Method: PUT</p>\n    <p>Url: /api/v1/channels/:id</p>\n    <p>Params:</p>\n    <table>\n            <tr>\n                <td>title</td>\n                <td>Some string</td>\n            </tr>\n    </table>\n    <p>Return: No content</p>\n    <h2>Delete one channel by his id</h2>\n    <p>Method: DELETE</p>\n    <p>Url: /api/v1/channels/:id</p>\n    <p>Params: No params</p>\n    <p>Return: No content</p>\n    <h1 id=\"account\">Account</h1>\n    <h2>Get user data</h2>\n    <p>Method: GET</p>\n    <p>Url: /developer/v1/</p>\n    <p>Params: No params</p>\n    <p>Return: user that login</p>\n    <p>Method of authorization: header must have field Authorization: Basic value(username:password in Base64)</p>\n    <h1 id=\"errors\">Errors</h1>\n    <p>400(username is already exist, page less then 0 or greater then pages</p>\n    <p>401(You are not authorize)</p>\n    <p>403(You are not admin)</p>\n    <p>404(Not found)</p>\n    <p>500(DataBase error)</p>\n      </div>\n    );\n  }\n}\n\nexport default API"]},"metadata":{},"sourceType":"module"}